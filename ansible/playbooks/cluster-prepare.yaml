---
- name: Prepare System
  hosts: kubernetes
  become: true
  gather_facts: true

  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 5 seconds...
      ansible.builtin.pause:
        seconds: 5
    - name: Populate service facts
      ansible.builtin.service_facts:

    - name: Set facts
      ansible.builtin.set_fact:
        os_release: "{{ ansible_distribution_release | lower }}"
  tasks:
    # Locale 설정
    - name: Locale
      block:
        - name: Locale | Set timezone
          community.general.timezone:
            name: "Asia/Seoul"
    # 패키지 설치
    - name: Packages
      block:
        - name: Packages | Install
          ansible.builtin.dnf:
            name:
              - make
              - npm
              - dnf-plugins-core
              # ("apt-transport-https"와 "ca-certificates"는 dnf에 의해 기본으로 활성화되어 있음)
              - conntrack
              - curl
              # dirmngr는 gnupg2에 포함되어 있음
              - gdisk
              - gnupg2
              - hdparm
              - htop
              - iptables
              - iproute
              - ipvsadm
              - libseccomp
              - lm_sensors
              - redhat-lsb-core   # 대신 lsb_release
              - neofetch
              - net-tools
              - nfs-utils         # nfs-common 대신
              - nvme-cli
              - iscsi-initiator-utils  # open-iscsi 대신
              - parted
              - psmisc
              - python3
              - python3-dnf       # python3-apt 대신
              - python3-kubernetes
              - python3-yaml            # python3-yaml 대신
              - smartmontools
              - socat
              - unzip
              - util-linux
              - wget
              # - multipath-tools
              # device-mapper-multipath 대신 multipath-tools
              - gnupg
            state: present
        - name: Packages | Install Cockpit from official repos
          ansible.builtin.dnf:
            name:
              - cockpit
              - cockpit-storaged
              - cockpit-networkmanager
              - cockpit-packagekit
              - cockpit-machines
              - cockpit-podman
            state: present

        - name: Packages | Enable Cockpit service
          ansible.builtin.systemd:
            name: cockpit.socket
            state: started
            enabled: true

        # Trivy 설치는 아래처럼 할 수 있음
        - name: Packages | Install Trivy
          ansible.builtin.shell:
            cmd: |
              curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -

    #  Fish
    - name: Fish
      block:
        - name: Fish | Add fish repository
          ansible.builtin.dnf:
            name: fish
            state: present

    # 네트워크 설정
    - name: Network Configuration
      notify: RebootHandler
      block:
        - name: Network Configuration | Set hostname
          ansible.builtin.hostname:
            name: "{{ inventory_hostname }}"
        - name: Network Configuration | Update hosts
          ansible.builtin.copy:
            content: |
              127.0.0.1 localhost
              127.0.1.1 {{ inventory_hostname }}
              # The following lines are desirable for IPv6 capable hosts
              ::1     localhost ip6-localhost ip6-loopback
              ff02::1 ip6-allnodes
              ff02::2 ip6-allrouters
            dest: /etc/hosts
            mode: preserve

        - name: Network Configuration | Get real path of /etc/resolv.conf
          command: readlink -f /etc/resolv.conf
          register: real_resolv_conf_path
          changed_when: false

        - name: Network Configuration | Add custom /etc/resolv.conf real file
          ansible.builtin.copy:
            attributes: +i
            mode: '0644'
            dest: "{{ real_resolv_conf_path.stdout }}"
            content: |
              search .
              nameserver 1.1.1.1
              nameserver 1.0.0.1


    - name: System Configuration
      notify: RebootHandler
      block:
        - name: System Configuration | Disable SELinux
          ansible.posix.selinux:
            policy: targeted
            state: permissive
        - name: System Configuration | Disable swap
          ansible.builtin.command: swapoff -a
          changed_when: false
        - name: System Configuration | Create Kernel modules
          ansible.builtin.copy:
            dest: "/etc/modules-load.d/{{ item }}.conf"
            mode: "0644"
            content: "{{ item }}"
          loop: ["br_netfilter", "ceph", "ip_vs", "ip_vs_rr", "nbd", "overlay", "rbd", "zfs"]
          register: modules_status
        - name: System Configuration | Reload Kernel modules  # noqa: no-changed-when no-handler
          when: modules_status.changed
          ansible.builtin.systemd:
            name: systemd-modules-load
            state: restarted
        - name: System Configuration | Sysctl
          ansible.posix.sysctl:
            name: "{{ item.key }}"
            value: "{{ item.value }}"
            sysctl_file: /etc/sysctl.d/99-kubernetes.conf
            reload: true
          loop:
            - { key: "fs.inotify.max_queued_events", value: "65536" }
            - { key: "fs.inotify.max_user_watches", value: "524288" }
            - { key: "fs.inotify.max_user_instances", value: "8192" }

  handlers:
    - name: RebootHandler
      ansible.builtin.reboot:
        msg: Rebooting hosts
        reboot_timeout: 3600
